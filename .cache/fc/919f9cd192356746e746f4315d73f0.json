{"id":"node_modules/masonry.js/masonry.js","dependencies":[{"name":"/Users/bartoszsroka/Desktop/project-photography/photography/package.json","includedInParent":true,"mtime":1607529268382},{"name":"/Users/bartoszsroka/Desktop/project-photography/photography/node_modules/masonry.js/package.json","includedInParent":true,"mtime":1607529268215}],"generated":{"js":"var define;\n/*!\n * Masonry v3.1.5\n * Cascading grid layout library\n * http://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window ) {\n\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\nvar indexOf = Array.prototype.indexOf ?\n  function( items, value ) {\n    return items.indexOf( value );\n  } :\n  function ( items, value ) {\n    for ( var i=0, len = items.length; i < len; i++ ) {\n      var item = items[i];\n      if ( item === value ) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n// -------------------------- masonryDefinition -------------------------- //\n\n// used for AMD definition and requires\nfunction masonryDefinition( Outlayer, getSize ) {\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n\n  Masonry.prototype._resetLayout = function() {\n    this.getSize();\n    this._getMeasurement( 'columnWidth', 'outerWidth' );\n    this._getMeasurement( 'gutter', 'outerWidth' );\n    this.measureColumns();\n\n    // reset column Y\n    var i = this.cols;\n    this.colYs = [];\n    while (i--) {\n      this.colYs.push( 0 );\n    }\n\n    this.maxY = 0;\n  };\n\n  Masonry.prototype.measureColumns = function() {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if ( !this.columnWidth ) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n        // if first elem has no width, default to size of container\n        this.containerWidth;\n    }\n\n    this.columnWidth += this.gutter;\n\n    this.cols = Math.floor( ( this.containerWidth + this.gutter ) / this.columnWidth );\n    this.cols = Math.max( this.cols, 1 );\n  };\n\n  Masonry.prototype.getContainerWidth = function() {\n    // container is parent if fit width\n    var container = this.options.isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize( container );\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  Masonry.prototype._getItemLayoutPosition = function( item ) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n    colSpan = Math.min( colSpan, this.cols );\n\n    var colGroup = this._getColGroup( colSpan );\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply( Math, colGroup );\n    var shortColIndex = indexOf( colGroup, minimumY );\n\n    // position the brick\n    var position = {\n      x: this.columnWidth * shortColIndex,\n      y: minimumY\n    };\n\n    // apply setHeight to necessary columns\n    var setHeight = minimumY + item.size.outerHeight;\n    var setSpan = this.cols + 1 - colGroup.length;\n    for ( var i = 0; i < setSpan; i++ ) {\n      this.colYs[ shortColIndex + i ] = setHeight;\n    }\n\n    return position;\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  Masonry.prototype._getColGroup = function( colSpan ) {\n    if ( colSpan < 2 ) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for ( var i = 0; i < groupCount; i++ ) {\n      // make an array of colY values for that one group\n      var groupColYs = this.colYs.slice( i, i + colSpan );\n      // and get the max value of the array\n      colGroup[i] = Math.max.apply( Math, groupColYs );\n    }\n    return colGroup;\n  };\n\n  Masonry.prototype._manageStamp = function( stamp ) {\n    var stampSize = getSize( stamp );\n    var offset = this._getElementOffset( stamp );\n    // get the columns that this stamp affects\n    var firstX = this.options.isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor( firstX / this.columnWidth );\n    firstCol = Math.max( 0, firstCol );\n    var lastCol = Math.floor( lastX / this.columnWidth );\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min( this.cols - 1, lastCol );\n    // set colYs to bottom of the stamp\n    var stampMaxY = ( this.options.isOriginTop ? offset.top : offset.bottom ) +\n      stampSize.outerHeight;\n    for ( var i = firstCol; i <= lastCol; i++ ) {\n      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n    }\n  };\n\n  Masonry.prototype._getContainerSize = function() {\n    this.maxY = Math.max.apply( Math, this.colYs );\n    var size = {\n      height: this.maxY\n    };\n\n    if ( this.options.isFitWidth ) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  Masonry.prototype._getContainerFitWidth = function() {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while ( --i ) {\n      if ( this.colYs[i] !== 0 ) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n  };\n\n  Masonry.prototype.needsResizeLayout = function() {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth !== this.containerWidth;\n  };\n\n  return Masonry;\n}\n\n// -------------------------- transport -------------------------- //\n\nif ( typeof define === 'function' && define.amd ) {\n  // AMD\n  define( [\n      'outlayer/outlayer',\n      'get-size/get-size'\n    ],\n    masonryDefinition );\n} else {\n  // browser global\n  window.Masonry = masonryDefinition(\n    window.Outlayer,\n    window.getSize\n  );\n}\n\n})( window );\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/masonry.js/masonry.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/masonry.js/masonry.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}}],"sources":{"node_modules/masonry.js/masonry.js":"/*!\n * Masonry v3.1.5\n * Cascading grid layout library\n * http://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window ) {\n\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\nvar indexOf = Array.prototype.indexOf ?\n  function( items, value ) {\n    return items.indexOf( value );\n  } :\n  function ( items, value ) {\n    for ( var i=0, len = items.length; i < len; i++ ) {\n      var item = items[i];\n      if ( item === value ) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n// -------------------------- masonryDefinition -------------------------- //\n\n// used for AMD definition and requires\nfunction masonryDefinition( Outlayer, getSize ) {\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n\n  Masonry.prototype._resetLayout = function() {\n    this.getSize();\n    this._getMeasurement( 'columnWidth', 'outerWidth' );\n    this._getMeasurement( 'gutter', 'outerWidth' );\n    this.measureColumns();\n\n    // reset column Y\n    var i = this.cols;\n    this.colYs = [];\n    while (i--) {\n      this.colYs.push( 0 );\n    }\n\n    this.maxY = 0;\n  };\n\n  Masonry.prototype.measureColumns = function() {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if ( !this.columnWidth ) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n        // if first elem has no width, default to size of container\n        this.containerWidth;\n    }\n\n    this.columnWidth += this.gutter;\n\n    this.cols = Math.floor( ( this.containerWidth + this.gutter ) / this.columnWidth );\n    this.cols = Math.max( this.cols, 1 );\n  };\n\n  Masonry.prototype.getContainerWidth = function() {\n    // container is parent if fit width\n    var container = this.options.isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize( container );\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  Masonry.prototype._getItemLayoutPosition = function( item ) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n    colSpan = Math.min( colSpan, this.cols );\n\n    var colGroup = this._getColGroup( colSpan );\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply( Math, colGroup );\n    var shortColIndex = indexOf( colGroup, minimumY );\n\n    // position the brick\n    var position = {\n      x: this.columnWidth * shortColIndex,\n      y: minimumY\n    };\n\n    // apply setHeight to necessary columns\n    var setHeight = minimumY + item.size.outerHeight;\n    var setSpan = this.cols + 1 - colGroup.length;\n    for ( var i = 0; i < setSpan; i++ ) {\n      this.colYs[ shortColIndex + i ] = setHeight;\n    }\n\n    return position;\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  Masonry.prototype._getColGroup = function( colSpan ) {\n    if ( colSpan < 2 ) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for ( var i = 0; i < groupCount; i++ ) {\n      // make an array of colY values for that one group\n      var groupColYs = this.colYs.slice( i, i + colSpan );\n      // and get the max value of the array\n      colGroup[i] = Math.max.apply( Math, groupColYs );\n    }\n    return colGroup;\n  };\n\n  Masonry.prototype._manageStamp = function( stamp ) {\n    var stampSize = getSize( stamp );\n    var offset = this._getElementOffset( stamp );\n    // get the columns that this stamp affects\n    var firstX = this.options.isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor( firstX / this.columnWidth );\n    firstCol = Math.max( 0, firstCol );\n    var lastCol = Math.floor( lastX / this.columnWidth );\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min( this.cols - 1, lastCol );\n    // set colYs to bottom of the stamp\n    var stampMaxY = ( this.options.isOriginTop ? offset.top : offset.bottom ) +\n      stampSize.outerHeight;\n    for ( var i = firstCol; i <= lastCol; i++ ) {\n      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n    }\n  };\n\n  Masonry.prototype._getContainerSize = function() {\n    this.maxY = Math.max.apply( Math, this.colYs );\n    var size = {\n      height: this.maxY\n    };\n\n    if ( this.options.isFitWidth ) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  Masonry.prototype._getContainerFitWidth = function() {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while ( --i ) {\n      if ( this.colYs[i] !== 0 ) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n  };\n\n  Masonry.prototype.needsResizeLayout = function() {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth !== this.containerWidth;\n  };\n\n  return Masonry;\n}\n\n// -------------------------- transport -------------------------- //\n\nif ( typeof define === 'function' && define.amd ) {\n  // AMD\n  define( [\n      'outlayer/outlayer',\n      'get-size/get-size'\n    ],\n    masonryDefinition );\n} else {\n  // browser global\n  window.Masonry = masonryDefinition(\n    window.Outlayer,\n    window.getSize\n  );\n}\n\n})( window );\n"},"lineCount":207}},"error":null,"hash":"7b36bcc14e7177b39ea7cfff74461e4b","cacheData":{"env":{}}}